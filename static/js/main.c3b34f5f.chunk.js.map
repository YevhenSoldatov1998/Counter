{"version":3,"sources":["components/Counter/CounterScreen/CounterScreen.jsx","components/Button/Button.js","components/Counter/CounterButtons/CounterButtons.jsx","components/CounterSet/CounterSet.jsx","components/Counter/Counter.jsx","redux/counterReducer.js","components/Counter/CounterContainer.js","components/CounterSet/CounterSetContainer.js","App.js","redux/store.js","index.js"],"names":["CounterScreen","props","disabled","valueScreen","maxInc","className","Button","onClick","callback","title","CounterButtons","call_handleInc","handleInc","call_handleReset","handleReset","this","React","Component","CounterSet","type","value","startValue","onChange","e","InputStartValue","target","placeholder","InputMaxInc","Counter","counter","INPUT_START_VALUE_CREATOR","start","INPUT_MAX_VALUE_CREATOR","max","initialState","counterReducer","state","action","CounterContainer","connect","App","reducer","combineReducers","store","createStore","composeWithDevTools","window","ReactDOM","render","document","getElementById"],"mappings":"gNAOeA,EANO,SAACC,GACnB,IAAMC,EAAWD,EAAME,cAAgBF,EAAMG,OAAS,EAAI,EAC1D,OACI,yBAAKC,UAAWH,EAAS,wBAAyB,kBAAmBD,EAAME,c,wCCIpEG,EANA,SAACL,GACZ,OACI,4BAAQM,QAASN,EAAMO,UAAWP,EAAMQ,QCsBjCC,E,2MArBXC,eAAiB,WAEb,EAAKV,MAAMW,a,EAEfC,iBAAmB,WACf,EAAKZ,MAAMa,e,wEAIMC,KAAKd,MAAME,YAAgBY,KAAKd,MAAMG,OACvD,OACI,yBAAKC,UAAS,YACV,kBAAC,EAAD,CAAQI,MAAM,MAAMD,SAAUO,KAAKJ,iBACnC,kBAAC,EAAD,CAAQF,MAAM,QAAQD,SAAUO,KAAKF,wB,GAfxBG,IAAMC,WCYpBC,EAbM,SAACjB,GAElB,OACI,yBAAKI,UAAS,WACV,2BAAOc,KAAK,SAASC,MAAOnB,EAAMoB,WAAYC,SAAU,SAACC,GAAD,OAAMtB,EAAMuB,gBAAgBD,EAAEE,OAAOL,QAASM,YAAW,gBACjH,2BAAOP,KAAK,SAASC,MAAOnB,EAAMG,OAAQkB,SAAU,SAACC,GAAD,OAAMtB,EAAM0B,YAAYJ,EAAEE,OAAOL,QAAQM,YAAW,kBACxG,yCCkBGE,EArBC,SAAC3B,GACb,OACI,oCACI,yBAAKI,UAAS,WACV,kBAAC,EAAD,CAAeD,OAAQH,EAAM4B,QAAQzB,OAAQD,YAAaF,EAAM4B,QAAQ1B,cACxE,kBAAC,EAAD,CAAgBS,UAAWX,EAAMW,UAAWR,OAAQH,EAAM4B,QAAQzB,OAClDD,YAAaF,EAAM4B,QAAQ1B,YAAaW,YAAab,EAAMa,iB,OCF9EgB,EAA4B,SAACC,GAAD,MAAW,CAACZ,KAN3B,oBAMoDY,UACjEC,EAA0B,SAACC,GAAD,MAAS,CAACd,KANzB,kBAMgDc,QACpEC,EAAe,CACf/B,YAAa,EACbkB,WAAY,EACZjB,OAAQ,GAkCG+B,EAhCQ,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAChDlC,EAAmCiC,EAAnCjC,YAAakB,EAAsBe,EAAtBf,WAAYjB,EAAUgC,EAAVhC,OAC9B,OAAQiC,EAAOlB,MACX,IAnBU,YAoBN,OAAIhB,EAAcC,EACP,eAAIgC,EAAX,CAAkBjC,YAAaA,EAAc,IAE1CiC,EACX,IAvBM,QAwBF,OAAO,eACAA,EADP,CAEIjC,YAAakB,IAErB,IA1BkB,oBA2Bd,OAAO,eACAe,EADP,CAEIf,YAAagB,EAAON,MACpB5B,aAAekC,EAAON,QAE9B,IA/BgB,kBAgCZ,OAAIM,EAAOJ,KAAOG,EAAMf,WACb,eACAe,EADP,CAEIhC,QAASiC,EAAOJ,MAGjBG,EAEX,QACI,OAAOA,ICzBJE,EANWC,aANF,SAACH,GACrB,MAAO,CACHP,QAASO,EAAMP,WAI4B,CAC/CjB,UDT6B,iBAAO,CAACO,KANvB,cCgBdL,YDTyB,iBAAO,CAACK,KANvB,UCgBVK,gBAAiBM,EACjBH,YAAaK,GAJSO,CAKvBX,GCV0BW,aANL,SAACH,GACrB,MAAO,CACHP,QAASO,EAAMP,WAI+B,CAClDL,gBAAiBM,EACjBH,YAAaK,GAFYO,CAG1BrB,GCCYsB,MARf,WACE,OACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,Q,eCJAoC,EAAUC,0BAAgB,CAACb,QAASM,IACpCQ,EAAQC,sBAAYH,EAASI,iCACpBF,IACfG,OAAOH,MAAQA,ECDfI,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.c3b34f5f.chunk.js","sourcesContent":["import React from 'react'\r\nconst CounterScreen = (props) => {\r\n    const disabled = props.valueScreen === props.maxInc ? 1 : 0;\r\n    return(\r\n        <div className={disabled?'counter-screen active': 'counter-screen'}>{props.valueScreen}</div>\r\n    )\r\n}\r\nexport default CounterScreen","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button onClick={props.callback}>{props.title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from \"../../Button/Button\";\r\n\r\nclass CounterButtons extends React.Component {\r\n\r\n    call_handleInc = () => {\r\n        debugger\r\n        this.props.handleInc()\r\n    };\r\n    call_handleReset = () => {\r\n        this.props.handleReset()\r\n    };\r\n\r\n    render() {\r\n        const disabled = this.props.valueScreen === this.props.maxInc ? 1 : 0;\r\n        return (\r\n            <div className={`btn-wrap`}>\r\n                <Button title='INC' callback={this.call_handleInc}/>\r\n                <Button title='RESET' callback={this.call_handleReset}/>\r\n                {/*<button onClick={this.call_handleInc} disabled={disabled}>INC</button>*/}\r\n                {/*<button onClick={this.call_handleReset}>RESET</button>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterButtons","import React from 'react'\r\n\r\nconst   CounterSet = (props) => {\r\n    debugger\r\n    return (\r\n        <div className={`counter`}>\r\n            <input type=\"number\" value={props.startValue} onChange={(e)=> props.InputStartValue(e.target.value) } placeholder={`start value`}/>\r\n            <input type=\"number\" value={props.maxInc} onChange={(e)=> props.InputMaxInc(e.target.value)} placeholder={`max increment`}/>\r\n            <button >SET</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CounterSet","import React from 'react'\r\nimport CounterScreen from \"./CounterScreen/CounterScreen\";\r\nimport CounterButtons from \"./CounterButtons/CounterButtons\";\r\nimport CounterSet from \"../CounterSet/CounterSet\";\r\n\r\nconst Counter = (props) => {\r\n    return (\r\n        <>\r\n            <div className={`counter`}>\r\n                <CounterScreen maxInc={props.counter.maxInc} valueScreen={props.counter.valueScreen}/>\r\n                <CounterButtons handleInc={props.handleInc} maxInc={props.counter.maxInc}\r\n                                valueScreen={props.counter.valueScreen} handleReset={props.handleReset}\r\n                               />\r\n            </div>\r\n            {/*<CounterSet*/}\r\n            {/*    maxInc={props.counter.maxInc}*/}\r\n            {/*    startValue = {props.counter.startValue}*/}\r\n            {/*    InputStartValue={props.InputStartValue}*/}\r\n            {/*    InputMaxInc={props.InputMaxInc}*/}\r\n            {/*/>*/}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Counter","const INCREMENT = 'INCREMENT';\r\nconst RESET = 'RESET';\r\nconst SET = 'SET';\r\nconst INPUT_START_VALUE = 'INPUT_START_VALUE';\r\nconst INPUT_MAX_VALUE = 'INPUT_MAX_VALUE';\r\n\r\nexport const INCREMENT_CREATOR = () => ({type: INCREMENT});\r\nexport const RESET_CREATOR = () => ({type: RESET});\r\nexport const SET_CREATOR = () => ({type: SET});\r\nexport const INPUT_START_VALUE_CREATOR = (start)=> ({type: INPUT_START_VALUE, start})\r\nexport const INPUT_MAX_VALUE_CREATOR = (max)=> ({type: INPUT_MAX_VALUE, max})\r\nlet initialState = {\r\n    valueScreen: 0,\r\n    startValue: 0,\r\n    maxInc: 5,\r\n}\r\nconst counterReducer = (state = initialState, action) => {\r\n    let {valueScreen, startValue, maxInc} = state;\r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            if (valueScreen < maxInc) {\r\n                return {...state, valueScreen: valueScreen + 1}\r\n            }\r\n            return state;\r\n        case RESET:\r\n            return {\r\n                ...state,\r\n                valueScreen: startValue\r\n            }\r\n        case INPUT_START_VALUE:\r\n            return {\r\n                ...state,\r\n                startValue: +action.start,\r\n                valueScreen:  +action.start\r\n            }\r\n        case INPUT_MAX_VALUE:\r\n            if(+action.max >= state.startValue){\r\n                return {\r\n                    ...state,\r\n                    maxInc: +action.max\r\n                }\r\n            }\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default counterReducer","import {connect} from \"react-redux\";\r\nimport Counter from \"./Counter\";\r\nimport {\r\n    INCREMENT_CREATOR,\r\n    INPUT_MAX_VALUE_CREATOR,\r\n    INPUT_START_VALUE_CREATOR,\r\n    RESET_CREATOR\r\n} from '../../redux/counterReducer'\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        counter: state.counter\r\n    }\r\n}\r\n\r\nconst  CounterContainer = connect(mapStateToProps, {\r\n    handleInc: INCREMENT_CREATOR,\r\n    handleReset: RESET_CREATOR,\r\n    InputStartValue: INPUT_START_VALUE_CREATOR,\r\n    InputMaxInc: INPUT_MAX_VALUE_CREATOR\r\n})(Counter)\r\nexport default CounterContainer","import {connect} from \"react-redux\";\r\nimport CounterSet from \"./CounterSet\";\r\nimport {INPUT_MAX_VALUE_CREATOR, INPUT_START_VALUE_CREATOR, SET_CREATOR,} from '../../redux/counterReducer'\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        counter: state.counter\r\n    }\r\n}\r\n\r\nconst  CounterSetContainer = connect(mapStateToProps, {\r\n    InputStartValue: INPUT_START_VALUE_CREATOR,\r\n    InputMaxInc: INPUT_MAX_VALUE_CREATOR\r\n})(CounterSet)\r\nexport default CounterSetContainer","import React from 'react';\nimport './App.css';\nimport CounterContainer from \"./components/Counter/CounterContainer\";\nimport CounterSetContainer from \"./components/CounterSet/CounterSetContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers, createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport counterReducer from './counterReducer'\r\n\r\nconst reducer = combineReducers({counter: counterReducer})\r\nconst store = createStore(reducer, composeWithDevTools())\r\nexport default store\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}